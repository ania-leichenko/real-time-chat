name: deploy-development

on:
  push:
    branches:
      - development
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        image_name: bws-backend-development
        registry: docker.pkg.github.com
        image_tag: latest
        context: ./
        dockerfile: ./backend/Dockerfile.development

  build-frontend:
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        image_name: bws-frontend-development
        registry: docker.pkg.github.com
        image_tag: latest
        context: ./
        dockerfile: ./frontend/Dockerfile.development
        build_extra_args: "--build-arg=REACT_APP_API_ORIGIN_URL=/api/v1"

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Copy docker-compose.yml to deployment server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
        source: .docker/bws/docker-compose.development.yml
        target: app

    - name: Run docker-compose.yml on deployment server
      uses: appleboy/ssh-action@master
      env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
        envs: GITHUB_USERNAME,GITHUB_TOKEN
        script: |
          export GITHUB_USERNAME=$GITHUB_USERNAME
          export GITHUB_TOKEN=$GITHUB_TOKEN
          echo "$GITHUB_TOKEN" | docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
          cd app/.docker/bws
          docker-compose -f docker-compose.development.yml pull
          docker-compose -f docker-compose.development.yml stop
          docker-compose -f docker-compose.development.yml up -d --build

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    environment: development
    steps:
      - name: Trigger this job at the end of workflow
        uses: technote-space/workflow-conclusion-action@v2

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: Deployment
          SLACK_TITLE: Status
          # WORKFLOW_CONCLUSION: neutral, success, skipped, cancelled, timed_out, action_required, failure
          SLACK_MESSAGE: "Deployment is ${{ env.WORKFLOW_CONCLUSION == 'success' && 'Success ðŸŸ¢' || env.WORKFLOW_CONCLUSION == 'cancelled' && 'Cancelled ðŸŸ¡' || env.WORKFLOW_CONCLUSION == 'skipped' && 'Skipped ðŸ”µ' || 'Error ðŸ”´' }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
